import { type StyleProp, type TextStyle } from 'react-native';
import type { NativeFontWeight } from './RNUITextViewChildNativeComponent';
export declare function flattenStyles(rootStyle: TextStyle, style: StyleProp<TextStyle>): {
    fontWeight: NativeFontWeight;
    backgroundColor: import("react-native").ColorValue;
    shadowOffset: Readonly<{
        width: number;
        height: number;
    }>;
    color?: import("react-native").ColorValue | undefined;
    fontFamily?: string | undefined;
    fontSize?: number | undefined;
    fontStyle?: "normal" | "italic" | undefined;
    letterSpacing?: number | undefined;
    lineHeight?: number | undefined;
    textAlign?: "auto" | "left" | "right" | "center" | "justify" | undefined;
    textDecorationLine?: "none" | "underline" | "line-through" | "underline line-through" | undefined;
    textDecorationStyle?: "solid" | "double" | "dotted" | "dashed" | undefined;
    textDecorationColor?: import("react-native").ColorValue | undefined;
    textShadowColor?: import("react-native").ColorValue | undefined;
    textShadowOffset?: {
        width: number;
        height: number;
    } | undefined;
    textShadowRadius?: number | undefined;
    textTransform?: "none" | "capitalize" | "uppercase" | "lowercase" | undefined;
    userSelect?: "auto" | "none" | "text" | "contain" | "all" | undefined;
    fontVariant?: import("react-native").FontVariant[] | undefined;
    writingDirection?: "auto" | "ltr" | "rtl" | undefined;
    backfaceVisibility?: "visible" | "hidden" | undefined;
    borderBlockColor?: import("react-native").ColorValue | undefined;
    borderBlockEndColor?: import("react-native").ColorValue | undefined;
    borderBlockStartColor?: import("react-native").ColorValue | undefined;
    borderBottomColor?: import("react-native").ColorValue | undefined;
    borderBottomEndRadius?: import("react-native").AnimatableNumericValue | string | undefined;
    borderBottomLeftRadius?: import("react-native").AnimatableNumericValue | string | undefined;
    borderBottomRightRadius?: import("react-native").AnimatableNumericValue | string | undefined;
    borderBottomStartRadius?: import("react-native").AnimatableNumericValue | string | undefined;
    borderColor?: import("react-native").ColorValue | undefined;
    borderCurve?: "circular" | "continuous" | undefined;
    borderEndColor?: import("react-native").ColorValue | undefined;
    borderEndEndRadius?: import("react-native").AnimatableNumericValue | string | undefined;
    borderEndStartRadius?: import("react-native").AnimatableNumericValue | string | undefined;
    borderLeftColor?: import("react-native").ColorValue | undefined;
    borderRadius?: import("react-native").AnimatableNumericValue | string | undefined;
    borderRightColor?: import("react-native").ColorValue | undefined;
    borderStartColor?: import("react-native").ColorValue | undefined;
    borderStartEndRadius?: import("react-native").AnimatableNumericValue | string | undefined;
    borderStartStartRadius?: import("react-native").AnimatableNumericValue | string | undefined;
    borderStyle?: "solid" | "dotted" | "dashed" | undefined;
    borderTopColor?: import("react-native").ColorValue | undefined;
    borderTopEndRadius?: import("react-native").AnimatableNumericValue | string | undefined;
    borderTopLeftRadius?: import("react-native").AnimatableNumericValue | string | undefined;
    borderTopRightRadius?: import("react-native").AnimatableNumericValue | string | undefined;
    borderTopStartRadius?: import("react-native").AnimatableNumericValue | string | undefined;
    outlineColor?: import("react-native").ColorValue | undefined;
    outlineOffset?: import("react-native").AnimatableNumericValue | undefined;
    outlineStyle?: "solid" | "dotted" | "dashed" | undefined;
    outlineWidth?: import("react-native").AnimatableNumericValue | undefined;
    opacity?: import("react-native").AnimatableNumericValue | undefined;
    elevation?: number | undefined;
    pointerEvents?: "box-none" | "none" | "box-only" | "auto" | undefined;
    isolation?: "auto" | "isolate" | undefined;
    cursor?: import("react-native").CursorValue | undefined;
    boxShadow?: ReadonlyArray<import("react-native").BoxShadowValue> | string | undefined;
    filter?: ReadonlyArray<import("react-native").FilterFunction> | string | undefined;
    mixBlendMode?: import("react-native").BlendMode | undefined;
    experimental_backgroundImage?: ReadonlyArray<import("react-native").GradientValue> | string | undefined;
    alignContent?: "flex-start" | "flex-end" | "center" | "stretch" | "space-between" | "space-around" | "space-evenly" | undefined;
    alignItems?: import("react-native").FlexAlignType | undefined;
    alignSelf?: "auto" | import("react-native").FlexAlignType | undefined;
    aspectRatio?: number | string | undefined;
    borderBottomWidth?: number | undefined;
    borderEndWidth?: number | undefined;
    borderLeftWidth?: number | undefined;
    borderRightWidth?: number | undefined;
    borderStartWidth?: number | undefined;
    borderTopWidth?: number | undefined;
    borderWidth?: number | undefined;
    bottom?: import("react-native").DimensionValue | undefined;
    boxSizing?: "border-box" | "content-box" | undefined;
    display?: "none" | "flex" | "contents" | undefined;
    end?: import("react-native").DimensionValue | undefined;
    flex?: number | undefined;
    flexBasis?: import("react-native").DimensionValue | undefined;
    flexDirection?: "row" | "column" | "row-reverse" | "column-reverse" | undefined;
    rowGap?: number | string | undefined;
    gap?: number | string | undefined;
    columnGap?: number | string | undefined;
    flexGrow?: number | undefined;
    flexShrink?: number | undefined;
    flexWrap?: "wrap" | "nowrap" | "wrap-reverse" | undefined;
    height?: import("react-native").DimensionValue | undefined;
    justifyContent?: "flex-start" | "flex-end" | "center" | "space-between" | "space-around" | "space-evenly" | undefined;
    left?: import("react-native").DimensionValue | undefined;
    margin?: import("react-native").DimensionValue | undefined;
    marginBottom?: import("react-native").DimensionValue | undefined;
    marginEnd?: import("react-native").DimensionValue | undefined;
    marginHorizontal?: import("react-native").DimensionValue | undefined;
    marginLeft?: import("react-native").DimensionValue | undefined;
    marginRight?: import("react-native").DimensionValue | undefined;
    marginStart?: import("react-native").DimensionValue | undefined;
    marginTop?: import("react-native").DimensionValue | undefined;
    marginVertical?: import("react-native").DimensionValue | undefined;
    maxHeight?: import("react-native").DimensionValue | undefined;
    maxWidth?: import("react-native").DimensionValue | undefined;
    minHeight?: import("react-native").DimensionValue | undefined;
    minWidth?: import("react-native").DimensionValue | undefined;
    overflow?: "visible" | "hidden" | "scroll" | undefined;
    padding?: import("react-native").DimensionValue | undefined;
    paddingBottom?: import("react-native").DimensionValue | undefined;
    paddingEnd?: import("react-native").DimensionValue | undefined;
    paddingHorizontal?: import("react-native").DimensionValue | undefined;
    paddingLeft?: import("react-native").DimensionValue | undefined;
    paddingRight?: import("react-native").DimensionValue | undefined;
    paddingStart?: import("react-native").DimensionValue | undefined;
    paddingTop?: import("react-native").DimensionValue | undefined;
    paddingVertical?: import("react-native").DimensionValue | undefined;
    position?: "absolute" | "relative" | "static" | undefined;
    right?: import("react-native").DimensionValue | undefined;
    start?: import("react-native").DimensionValue | undefined;
    top?: import("react-native").DimensionValue | undefined;
    width?: import("react-native").DimensionValue | undefined;
    zIndex?: number | undefined;
    direction?: "inherit" | "ltr" | "rtl" | undefined;
    inset?: import("react-native").DimensionValue | undefined;
    insetBlock?: import("react-native").DimensionValue | undefined;
    insetBlockEnd?: import("react-native").DimensionValue | undefined;
    insetBlockStart?: import("react-native").DimensionValue | undefined;
    insetInline?: import("react-native").DimensionValue | undefined;
    insetInlineEnd?: import("react-native").DimensionValue | undefined;
    insetInlineStart?: import("react-native").DimensionValue | undefined;
    marginBlock?: import("react-native").DimensionValue | undefined;
    marginBlockEnd?: import("react-native").DimensionValue | undefined;
    marginBlockStart?: import("react-native").DimensionValue | undefined;
    marginInline?: import("react-native").DimensionValue | undefined;
    marginInlineEnd?: import("react-native").DimensionValue | undefined;
    marginInlineStart?: import("react-native").DimensionValue | undefined;
    paddingBlock?: import("react-native").DimensionValue | undefined;
    paddingBlockEnd?: import("react-native").DimensionValue | undefined;
    paddingBlockStart?: import("react-native").DimensionValue | undefined;
    paddingInline?: import("react-native").DimensionValue | undefined;
    paddingInlineEnd?: import("react-native").DimensionValue | undefined;
    paddingInlineStart?: import("react-native").DimensionValue | undefined;
    shadowColor?: import("react-native").ColorValue | undefined;
    shadowOpacity?: import("react-native").AnimatableNumericValue | undefined;
    shadowRadius?: number | undefined;
    transform?: Readonly<import("react-native").MaximumOneOf<import("react-native").PerspectiveTransform & import("react-native").RotateTransform & import("react-native").RotateXTransform & import("react-native").RotateYTransform & import("react-native").RotateZTransform & import("react-native").ScaleTransform & import("react-native").ScaleXTransform & import("react-native").ScaleYTransform & import("react-native").TranslateXTransform & import("react-native").TranslateYTransform & import("react-native").SkewXTransform & import("react-native").SkewYTransform & import("react-native").MatrixTransform>[]> | string | undefined;
    transformOrigin?: Array<string | number> | string | undefined;
    transformMatrix?: Array<number> | undefined;
    rotation?: import("react-native").AnimatableNumericValue | undefined;
    scaleX?: import("react-native").AnimatableNumericValue | undefined;
    scaleY?: import("react-native").AnimatableNumericValue | undefined;
    translateX?: import("react-native").AnimatableNumericValue | undefined;
    translateY?: import("react-native").AnimatableNumericValue | undefined;
    textAlignVertical?: "auto" | "top" | "bottom" | "center" | undefined;
    verticalAlign?: "auto" | "top" | "bottom" | "middle" | undefined;
    includeFontPadding?: boolean | undefined;
};
//# sourceMappingURL=util.d.ts.map