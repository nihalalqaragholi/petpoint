"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RNIWrapperView = void 0;
var React = _interopRequireWildcard(require("react"));
var _RNIWrapperNativeView = require("./RNIWrapperNativeView.js");
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
const RNIWrapperView = exports.RNIWrapperView = /*#__PURE__*/React.forwardRef((props, ref) => {
  const [viewID, setViewID] = React.useState();
  const [reactTag, setReactTag] = React.useState();
  React.useImperativeHandle(ref, () => ({
    getReactTag: () => {
      return reactTag;
    },
    getViewID: () => {
      return viewID;
    }
  }));
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_RNIWrapperNativeView.RNIWrapperNativeView, {
    ...props,
    onDidSetViewID: event => {
      setViewID(event.nativeEvent.viewID);
      setReactTag(event.nativeEvent.reactTag);
      props.onDidSetViewID?.(event);
      event.stopPropagation();
    },
    children: props.children
  });
});
//# sourceMappingURL=RNIWrapperView.js.map